import flash.display.DisplayObject;
import flash.display.MovieClip;
import flash.events.Event;
import flash.events.MouseEvent;
import flash.text.TextField;
import flash.text.TextFieldAutoSize;
import scaleform.gfx.FocusEventEx;
import scaleform.gfx.MouseEventEx;
import scaleform.clik.constants.ConstrainMode;
import scaleform.clik.constants.InvalidationType;
import scaleform.clik.core.UIComponent;
import scaleform.clik.events.InputEvent;
import scaleform.clik.events.ButtonEvent;
import scaleform.clik.events.ComponentEvent;
import scaleform.clik.data.DataProvider;
import scaleform.clik.interfaces.IDataProvider;
import scaleform.clik.constants.ControllerType;
import scaleform.clik.ui.InputDetails;
import scaleform.clik.constants.InputValue;
import scaleform.clik.constants.NavigationCode;
import scaleform.clik.utils.ConstrainedElement;
import scaleform.clik.utils.Constraints;
/**
 *  The CLIK Label component is a noneditable standard textField wrapped by a MovieClip symbol, with a few additional convenient features. Internally, the Label supports the same properties and behaviors as the standard textField, however only a handful of commonly used features are exposed by the component itself. Access to the Label’s actual textField is provided if the user needs to change its properties directly. In certain cases, such as those described below, developers may use the standard textField instead of the Label component.
    
    Since the Label is a MovieClip symbol, it can be embellished with graphical elements, which is not possible with the standard textField. As a symbol, it does not need to be configured per instance like textField instances.  The Label also provides a disabled state that can be defined in the timeline. Whereas, complex AS2 code is required to mimic such behavior with the standard textField. 
    
    The Label component uses constraints by default, which means resizing a Label instance on the stage will have no visible effect at runtime. If resizing textFields is required, developers should use the standard textField instead of the Label in most cases. In general, if consistent reusability is not a requirement for the text element, the standard textField is a lighter weight alternative than the Label component.
    
   <b>Inspectable Properties</b>
        The inspectable properties of the Label component are:
        <ul>
            <li><i>autoSize</i>: Determines if the Label will scale to fit the text that it contains and which direction to align the resized button. Setting the autoSize property to {@code autoSize="none"} will leave its current size unchanged.</li>
            <li><i>enabled</i>: Disables the Label if set to false.</li>
            <li><i>text</i>: Sets the text of the Label.</li>
            <li><i>visible</i>: Hides the Label if set to false.</li>
        </ul>
    
    <b>States</b>
        The CLIK Label component supports two states based on the disabled property.
        <ul>
            <li>A default or enabled state.</li>
            <li>a disabled state.</li>
        </ul>
        
    <b>Events</b>
    All event callbacks receive a single Event parameter that contains relevant information about the event. The following properties are common to all events. <ul>
    <li><i>type</i>: The event type.</li>
    <li><i>target</i>: The target that generated the event.</li></ul>
        
    The events generated by the component are listed below. The properties listed next to the event are provided in addition to the common properties.
    <ul>
        <li><i>ComponentEvent.SHOW</i>: The visible property has been set to true at runtime.</li>
        <li><i>ComponentEvent.HIDE</i>: The visible property has been set to false at runtime.</li>
        <li><i>ComponentEvent.STATE_CHANGE</i>: The Label's state has changed.</li>
    </ul>
*/
intrinsic class scaleform.clik.controls.Label extends UIComponent
{
	/** True if constraints are disabled for the component. Setting the disableConstraintsproperty to {@code disableConstraints=true} will remove constraints from the textfield. This is useful for components with timeline based textfield size tweens, since constraints break them due to a Flash quirk. */
	public var constraintsDisabled : Boolean;
	public var _text : String;
	public var _autoSize : String;
	public var isHtml : Boolean;
	public var state : String;
	public var _newFrame : String;
	/** A reference to the textField instance used to display the selected item's label. Note that when state changes are made, the textField instance may change, so changes made to it externally may be lost. */
	public var textField : TextField;

	public function get enabled() : Boolean;
	public function set enabled(value:Boolean) : void;

	public function get text() : String;
	public function set text(value:String) : void;

	/**
         * The html text to be displayed by the label component.  This property assumes that localization has 
         * been handled externally.
         * @see #text For plain text use {@code text} property.
         */
	public function get htmlText() : String;
	public function set htmlText(value:String) : void;

	public function get autoSize() : String;
	public function set autoSize(value:String) : void;

	public function get length() : uint;

	public function get defaultState() : String;


	public function Label();

	public function preInitialize() : void;

	public function initialize() : void;

	/** Append a String to the existing text within the Label. */
	public function appendText(value:String) : void;

	/** 
         * Append an HTML-formatted String to the existing text within the Label. Note that the Label will be 
         * automatically set to display HTML text.
         */
	public function appendHtml(value:String) : void;

	/** @exclude */
	public function toString() : String;

	public function configUI() : void;

	public function calculateWidth() : Number;

	public function alignForAutoSize() : void;

	public function draw() : void;

	public function updateText() : void;

	public function updateAfterStateChange() : void;

	public function setState(...states:Array) : void;

}